{"version":3,"sources":["components/Form.js","components/Cita.js","App.js","serviceWorker.js","index.js"],"names":["Form","createCita","useState","nombre","propietario","dia","hora","sintomas","datosCita","modifyCita","error","modifyErrorState","handleState","e","target","name","value","className","onSubmit","preventDefault","trim","id","uuidv4","htmlFor","type","placeholder","onChange","cols","Cita","cita","removeCita","onClick","aria-hidden","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardaCitas","useEffect","setItem","stringify","newCitas","filter","newCita","length","map","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c7bcbfeb.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Form = ({ createCita }) => {\n\t//data State datosCita\n\tconst [datosCita, modifyCita] = useState({\n\t\tnombre: \"\",\n\t\tpropietario: \"\",\n\t\tdia: \"\",\n\t\thora: \"\",\n\t\tsintomas: \"\"\n\t});\n\n\t//error handler\n\tconst [error, modifyErrorState] = useState(false);\n\n\t//handling form inputs from form\n\tconst handleState = e => {\n\t\tmodifyCita({\n\t\t\t...datosCita, //getting object updated\n\t\t\t[e.target.name]: e.target.value //updating specific input\n\t\t});\n\t};\n\n\t//destructuring data\n\tconst { nombre, propietario, dia, hora, sintomas } = datosCita;\n\n\t//clicking a button\n\tconst creandoCita = e => {\n\t\te.preventDefault();\n\n\t\t//validating\n\t\tif (\n\t\t\tnombre.trim() === \"\" ||\n\t\t\tpropietario.trim() === \"\" ||\n\t\t\tdia.trim() === \"\" ||\n\t\t\thora.trim() === \"\" ||\n\t\t\tsintomas.trim() === \"\"\n\t\t) {\n\t\t\tmodifyErrorState(true);\n\t\t\treturn;\n\t\t}\n\n\t\t//removing error message\n\t\tmodifyErrorState(false);\n\n\t\t//assigning an ID\n\t\tdatosCita.id = uuidv4();\n\n\t\t//creating a new dating\n\t\tcreateCita(datosCita);\n\n\t\t//renew a form\n\t\tmodifyCita({\n\t\t\tnombre: \"\",\n\t\t\tpropietario: \"\",\n\t\t\tdia: \"\",\n\t\t\thora: \"\",\n\t\t\tsintomas: \"\"\n\t\t});\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{error ? (\n\t\t\t\t<div className=\"error alert alert-danger\">Rellena todos los campos</div>\n\t\t\t) : null}\n\t\t\t<form onSubmit={creandoCita}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"nombre\"> Nombre: </label>{\" \"}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"nombre\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder=\"Nombre mascota\"\n\t\t\t\t\t\tonChange={handleState} //whenever there's a change on this input this event works\n\t\t\t\t\t\tvalue={nombre}\n\t\t\t\t\t/>\n\t\t\t\t</div>{\" \"}\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"propietario\"> Propietario: </label>{\" \"}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"propietario\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder=\"Nombre propietario\"\n\t\t\t\t\t\tonChange={handleState}\n\t\t\t\t\t\tvalue={propietario}\n\t\t\t\t\t/>\n\t\t\t\t</div>{\" \"}\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"dia\"> Día: </label>{\" \"}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tname=\"dia\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={dia}\n\t\t\t\t\t\tonChange={handleState}\n\t\t\t\t\t/>\n\t\t\t\t</div>{\" \"}\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"hora\"> Hora: </label>{\" \"}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"time\"\n\t\t\t\t\t\tname=\"hora\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tonChange={handleState}\n\t\t\t\t\t\tvalue={hora}\n\t\t\t\t\t/>\n\t\t\t\t</div>{\" \"}\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"sintomas\"> Síntomas: </label>{\" \"}\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tcols=\"20\"\n\t\t\t\t\t\tname=\"sintomas\"\n\t\t\t\t\t\tonChange={handleState}\n\t\t\t\t\t\tvalue={sintomas}\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>{\" \"}\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\tid=\"crear\"\n\t\t\t\t\t\tvalue=\"agregar\"\n\t\t\t\t\t/>\n\t\t\t\t</div>{\" \"}\n\t\t\t</form>{\" \"}\n\t\t</Fragment>\n\t);\n};\n\nexport default Form;\n","import React, { Fragment } from \"react\";\n\nconst Cita = ({ cita, removeCita }) => {\n\tconst { nombre, propietario, dia, hora, sintomas } = cita;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<ul className=\"list-group list-group-flush\">\n\t\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<span className=\"float-left\">Fecha: {dia} </span>{\" \"}\n\t\t\t\t\t\t\t\t<span className=\"float-right\">Hora:{hora} </span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t<h5 className=\"card-title mt-3\">Mascota: {nombre} </h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t<h5 className=\"mr-2 float-left mt-3\">\n\t\t\t\t\t\t\t\t\tPropietario: {propietario}{\" \"}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<p className=\"card-text my-3\">Síntomas: {sintomas}</p>\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-danger\"\n\t\t\t\t\t\tonClick={() => removeCita(cita.id)}\n\t\t\t\t\t>\n\t\t\t\t\t\tEliminar <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default Cita;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport Cita from \"./components/Cita\";\n\nimport \"./app.css\";\n\nfunction App() {\n\t//citas on LocalStorage\n\tlet citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n\tif (!citasIniciales) {\n\t\tcitasIniciales = [];\n\t}\n\n\t//citas array State\n\tconst [citas, guardaCitas] = useState(citasIniciales);\n\n\t//saving any change on LocalStorage\n\tuseEffect(() => {\n\t\tif (citasIniciales) {\n\t\t\tlocalStorage.setItem(\"citas\", JSON.stringify(citas));\n\t\t} else {\n\t\t\tlocalStorage.setItem(\"citas\", JSON.stringify([]));\n\t\t}\n\t}, [citas, citasIniciales]);\n\n\t//function gets old citas and add a new one\n\tconst createCita = newCita => {\n\t\tguardaCitas([...citas, newCita]); //updating citas array when adding\n\t};\n\n\t//function gets old citas and add a new one\n\tconst removeCita = id => {\n\t\tconst newCitas = citas.filter(cita => cita.id !== id);\n\t\tguardaCitas(newCitas); //updating citas array when removing\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm-12 col-md-4\">\n\t\t\t\t\t\t<h4 className=\"text-center\">ADMINISTRADOR DE CITAS</h4>\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Form createCita={createCita} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-sm-12 col-md-8\">\n\t\t\t\t\t\t<h4 className=\"text-center\">CITAS PENDIENTES</h4>\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t{citas.length === 0 ? (\n\t\t\t\t\t\t\t\t<h2 className=\"text text-center alert alert-primary\">\n\t\t\t\t\t\t\t\t\tNo hay citas pendientes\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tcitas.map(cita => (\n\t\t\t\t\t\t\t\t\t<Cita key={cita.id} cita={cita} removeCita={removeCita} />\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}